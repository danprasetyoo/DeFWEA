generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Calculator {
    id                  Int             @id @default(autoincrement())
    inputStatementDate  DateTime
    inputOpeningfund    String
    inputStatementPeriod DateTime
    inputTreatyYear     Int
    inputTreatyDetail   TreatyDetail[]
    inputLayerDetail    LayerDetail[]
    inputPremiumDetail  PremiumDetail[]
    inputShareDetail    ShareDetail[]   @relation("CalculatorToShareDetail")
    version             Int             @default(1)
}

model TreatyDetail {
    id                  Int                 @id @default(autoincrement())
    calculatorId        Int
    calculator          Calculator          @relation(fields: [calculatorId], references: [id])
    treatyCurrentYear   TreatyDetailCurrent? @relation("TreatyDetailToCurrent", map: "TreatyDetail_treatyCurrentYearId_fkey")
    treatyPriorYear     TreatyDetailPrior?   @relation("TreatyDetailToPrior", map: "TreatyDetail_treatyPriorYearId_fkey")
}

model TreatyDetailCurrent {
    id              Int             @id @default(autoincrement())
    currentExchange   Float
    currentMargin     Float
    currentBrokerage  Float
    currentInterest   Float
    currentLAP        Float
    currentMaintenance Float
    treatyDetail      TreatyDetail?   @relation("TreatyDetailToCurrent", fields: [treatyDetailId], references: [id], map: "TreatyDetailCurrent_treatyDetailId_fkey") // Make this optional!
    treatyDetailId    Int             @unique
}

model TreatyDetailPrior {
    id              Int             @id @default(autoincrement())
    priorExchange   Float
    priorMargin     Float
    priorBrokerage  Float
    priorInterest   Float
    priorLAP        Float
    priorMaintenance Float
    treatyDetail      TreatyDetail?   @relation("TreatyDetailToPrior", fields: [treatyDetailId], references: [id], map: "TreatyDetailPrior_treatyDetailId_fkey") // Make this optional!
    treatyDetailId    Int             @unique
}

model LayerDetail {
    id                  Int             @id @default(autoincrement())
    calculatorId        Int
    calculator          Calculator      @relation(fields: [calculatorId], references: [id])
    pdmaLayer           PdmaDetailLayer @relation(fields: [pdmaLayerId], references: [id])
    pdmaLayerId         Int             @unique
    maLayer             MaDetailLayer   @relation(fields: [maLayerId], references: [id])
    maLayerId           Int             @unique
    avLayer             AvDetailLayer   @relation(fields: [avLayerId], references: [id])
    avLayerId           Int             @unique
    liabilityLayer      LiabilityDetailLayer @relation(fields: [liabilityLayerId], references: [id])
    liabilityLayerId    Int             @unique
}

model PdmaDetailLayer {
  id                  Int                   @id @default(autoincrement())
  pdmaDetailUsd       Float
  pdmaDetailIdr       Float
  pdmaDetailShare     Float
  layerDetail         LayerDetail? 
  layerDetailId       Int                
}

model MaDetailLayer {
  id                  Int                   @id @default(autoincrement())
  maDetailUsd         Float
  maDetailIdr         Float
  maDetailShare       Float
  layerDetail         LayerDetail?
  layerDetailId       Int                 
}

model AvDetailLayer {
  id                  Int                   @id @default(autoincrement())
  avDetailUsd         Float
  avDetailIdr         Float
  avDetailShare       Float
  layerDetail         LayerDetail?    
  layerDetailId       Int       
}

model LiabilityDetailLayer {
  id                  Int                   @id @default(autoincrement())
  liabilityDetailUsd  Float
  liabilityDetailIdr  Float
  liabilityDetailShare Float
  layerDetail         LayerDetail?
  layerDetailId       Int       
}

model PremiumDetail {
    id                  Int                @id @default(autoincrement())
    calculatorId        Int
    calculator          Calculator         @relation(fields: [calculatorId], references: [id])
    pdmaPremium         PdmaDetailPremium  @relation(fields: [pdmaPremiumId], references: [id])
    pdmaPremiumId       Int                @unique
    maPremium           MaDetailPremium    @relation(fields: [maPremiumId], references: [id])
    maPremiumId         Int                @unique
    avPremium           AvDetailPremium    @relation(fields: [avPremiumId], references: [id])
    avPremiumId         Int                @unique
    liabilityPremium    LiabilityDetailPremium @relation(fields: [liabilityPremiumId], references: [id])
    liabilityPremiumId  Int                @unique
}

model PdmaDetailPremium {
  id                  Int               @id @default(autoincrement())
  pdmaPremiumUsd      Float
  pdmaPremiumIdr      Float
  pdmaPremiumShare    Float
  premiumDetail       PremiumDetail?    
  premiumDetailId     Int?
}

model MaDetailPremium {
  id                  Int               @id @default(autoincrement())
  maPremiumUsd        Float
  maPremiumIdr        Float
  maPremiumShare      Float
  premiumDetail       PremiumDetail?    
  premiumDetailId     Int?
}

model AvDetailPremium {
  id                  Int               @id @default(autoincrement())
  avPremiumUsd        Float
  avPremiumIdr        Float
  avPremiumShare      Float
  premiumDetail       PremiumDetail?    
  premiumDetailId     Int?
}

model LiabilityDetailPremium {
  id                  Int               @id @default(autoincrement())
  liabilityPremiumUsd Float
  liabilityPremiumIdr Float
  liabilityPremiumShare Float
  premiumDetail       PremiumDetail?    
  premiumDetailId     Int?
}

model ShareDetail {
    id                  Int             @id @default(autoincrement())
    calculatorId        Int
    calculator          Calculator      @relation("CalculatorToShareDetail", fields: [calculatorId], references: [id])
    pdmaShare           PdmaDetailShare @relation(fields: [pdmaShareId], references: [id])
    pdmaShareId         Int             @unique
    maShare             MaDetailShare   @relation(fields: [maShareId], references: [id])
    maShareId           Int             @unique
    avShare             AvDetailShare   @relation(fields: [avShareId], references: [id])
    avShareId           Int             @unique
    liabilityShare      LiabilityDetailShare @relation(fields: [liabilityShareId], references: [id])
    liabilityShareId    Int             @unique
}

model PdmaDetailShare {
  id                  Int                   @id @default(autoincrement())
  pdmaShareUsd        Float
  pdmaShareIdr        Float
  pdmaSharePremiumUsd Float
  pdmaSharePremiumIdr Float
  shareDetail         ShareDetail?
  shareDetailId       Int      
}

model MaDetailShare {
  id                  Int                   @id @default(autoincrement())
  maShareUsd          Float
  maShareIdr          Float
  maSharePremiumUsd   Float
  maSharePremiumIdr   Float
  shareDetail         ShareDetail?   
  shareDetailId       Int      
}

model AvDetailShare {
  id                  Int                   @id @default(autoincrement())
  avShareUsd          Float
  avShareIdr          Float
  avSharePremiumUsd   Float
  avSharePremiumIdr   Float
  shareDetail         ShareDetail?
  shareDetailId       Int      
}

model LiabilityDetailShare {
  id                        Int              @id @default(autoincrement())
  liabilityShareUsd         Float
  liabilityShareIdr         Float
  liabilitySharePremiumUsd  Float
  liabilitySharePremiumIdr  Float
  shareDetail               ShareDetail?
  shareDetailId             Int      
}
